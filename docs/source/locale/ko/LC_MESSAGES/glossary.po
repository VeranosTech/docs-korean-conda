# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Continuum Analytics
# This file is distributed under the same license as the conda package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conda 4.7.0.post2+1e64239b0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-21 13:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/glossary.rst:3
msgid "Glossary"
msgstr ""

#: ../../source/glossary.rst:12
msgid ".condarc"
msgstr ""

#: ../../source/glossary.rst:14
msgid ""
"The Conda Runtime Configuration file, an optional ``.yaml`` file that "
"allows you to configure many aspects of conda, such as which channels it "
"searches for packages, proxy settings and environment directories. A "
"``.condarc`` file is not included by default, but it is automatically "
"created in your home directory when you use the ``conda config`` command."
" The ``.condarc`` file can also be located in a root environment, in "
"which case it overrides any ``.condarc`` in the home directory. For more "
"information, see :doc:`user-guide/configuration/use-condarc` and :doc"
":`user-guide/configuration/admin-multi-user-install`. Pronounced \"conda "
"r-c\"."
msgstr ""

#: ../../source/glossary.rst:29
msgid "activate/deactivate environment"
msgstr ""

#: ../../source/glossary.rst:31
msgid ""
"Conda commands used to switch or move between installed environments. The"
" ``conda activate`` command prepends the path of your current environment"
" to the PATH environment variable so that you do not need to type it each"
" time. ``deactivate`` removes it. Even when an environment is "
"deactivated, you can still execute programs in that environment by "
"specifying their paths directly, as in "
"``~/anaconda/envs/envname/bin/program_name``. When an environment is "
"activated, you can execute the program in that environment with just "
"``program_name``."
msgstr ""

#: ../../source/glossary.rst:42
msgid ""
"Replace ``envname`` with the name of the environment and replace "
"``program_name`` with the name of the program."
msgstr ""

#: ../../source/glossary.rst:49
msgid "Anaconda"
msgstr ""

#: ../../source/glossary.rst:51
msgid ""
"A downloadable, free, open source, high-performance and optimized Python "
"and R distribution. Anaconda includes :ref:`conda <conda-glossary>`, "
"conda build, Python, and 100+ automatically installed, open source "
"scientific packages and their dependencies that have been tested to work "
"well together, including SciPy, NumPy and many others. Use the ``conda "
"install`` command to easily install 1,000+ popular open source packages "
"for data science--including advanced and scientific analytics--from the "
"Anaconda repository. Use the ``conda`` command to install thousands more "
"open source packages."
msgstr ""

#: ../../source/glossary.rst:62
msgid ""
"Because Anaconda is a Python distribution, it can make installing Python "
"quick and easy even for new users."
msgstr ""

#: ../../source/glossary.rst:65
msgid ""
"Available for Windows, macOS and Linux, all versions of Anaconda are "
"supported by the community."
msgstr ""

#: ../../source/glossary.rst:68
msgid "See also :ref:`miniconda-glossary` and :ref:`conda-glossary`."
msgstr ""

#: ../../source/glossary.rst:74
msgid "Anaconda Cloud"
msgstr ""

#: ../../source/glossary.rst:76
msgid ""
"A web-based repository hosting service in the cloud. Packages created "
"locally can be published to the cloud to be shared with others. Free "
"accounts on Cloud can publish packages to be shared publicly. Paid "
"subscriptions to Cloud can designate packages as private to be shared "
"with authorized users. Anaconda Cloud is a public version of Anaconda "
"Repository."
msgstr ""

#: ../../source/glossary.rst:86
msgid "Anaconda Navigator"
msgstr ""

#: ../../source/glossary.rst:88
msgid ""
"A desktop graphical user interface (GUI) included in all versions of "
"Anaconda that allows you to easily manage conda packages, environments, "
"channels and notebooks without a command line interface (CLI)."
msgstr ""

#: ../../source/glossary.rst:96
msgid "Channels"
msgstr ""

#: ../../source/glossary.rst:98
msgid ""
"The locations of the repositories where conda looks for packages. "
"Channels may point to a Cloud repository or a private location on a "
"remote or local repository that you or your organization created. The "
"``conda channel`` command has a default set of channels to search, "
"beginning with https://repo.continuum.io/pkgs/, which you may override, "
"for example, to maintain a private or internal channel. These default "
"channels are referred to in conda commands and in the ``.condarc`` file "
"by the channel name \"defaults.\""
msgstr ""

#: ../../source/glossary.rst:111
msgid "Conda"
msgstr ""

#: ../../source/glossary.rst:113
msgid ""
"The package and environment manager program bundled with Anaconda that "
"installs and updates conda packages and their dependencies. Conda also "
"lets you easily switch between conda environments on your local computer."
msgstr ""

#: ../../source/glossary.rst:122
msgid "Conda environment"
msgstr ""

#: ../../source/glossary.rst:124
msgid ""
"A folder or directory that contains a specific collection of conda "
"packages and their dependencies, so they can be maintained and run "
"separately without interference from each other. For example, you may use"
" a conda environment for only Python 2 and Python 2 packages, maintain "
"another conda environment with only Python 3 and Python 3 packages, and "
"maintain another for R language packages. Environments can be created "
"from:"
msgstr ""

#: ../../source/glossary.rst:132 ../../source/glossary.rst:163
msgid "The Navigator GUI."
msgstr ""

#: ../../source/glossary.rst:133
msgid "The command line."
msgstr ""

#: ../../source/glossary.rst:134
msgid ""
"An environment specification file with the name ``your-environment-"
"name.yml``."
msgstr ""

#: ../../source/glossary.rst:138
msgid "Replace ``your-environment-name`` with the name of your environment."
msgstr ""

#: ../../source/glossary.rst:145
msgid "Conda package"
msgstr ""

#: ../../source/glossary.rst:147
msgid ""
"A compressed file that contains everything that a software program needs "
"in order to be installed and run, so that you do not have to manually "
"find and install each dependency separately. A conda package includes "
"system-level libraries, Python or R language modules, executable programs"
" and other components. You manage conda packages with conda."
msgstr ""

#: ../../source/glossary.rst:157
msgid "Conda repository"
msgstr ""

#: ../../source/glossary.rst:159
msgid ""
"A cloud-based repository that contains 720+ open source certified "
"packages that are easily installed locally with the ``conda install`` "
"command. Anyone can access the repository from:"
msgstr ""

#: ../../source/glossary.rst:165
msgid "A terminal or Anaconda Prompt using conda commands."
msgstr ""

#: ../../source/glossary.rst:167
msgid "https://repo.continuum.io/pkgs/."
msgstr ""

#: ../../source/glossary.rst:173
msgid "Metapackage"
msgstr ""

#: ../../source/glossary.rst:175
msgid ""
"A conda package that only lists dependencies and does not include any "
"functional programs or libraries. The metapackage may contain links to "
"software files that are automatically downloaded when executed. An "
"example of a metapackage is \"anaconda,\" which collects together all the"
" packages in the Anaconda installer. The command ``conda create -n "
"envname anaconda`` creates an environment that exactly matches what would"
" be created from the Anaconda installer. You can create metapackages with"
" the ``conda metapackage`` command."
msgstr ""

#: ../../source/glossary.rst:189
msgid "Miniconda"
msgstr ""

#: ../../source/glossary.rst:191
msgid ""
"A free minimal installer for conda. Miniconda is a small, bootstrap "
"version of Anaconda that includes only conda, Python, the packages they "
"depend on and a small number of other useful packages, including pip, "
"zlib and a few others. Use the ``conda install`` command to install 720+ "
"additional conda packages from the Anaconda repository."
msgstr ""

#: ../../source/glossary.rst:198
msgid ""
"Because Miniconda is a Python distribution, and it can make installing "
"Python quick and easy even for new users."
msgstr ""

#: ../../source/glossary.rst:201
msgid "See also :ref:`anaconda-glossary` and :ref:`conda-glossary`."
msgstr ""

#: ../../source/glossary.rst:206
msgid "Noarch package"
msgstr ""

#: ../../source/glossary.rst:208
msgid ""
"A conda package that contains nothing specific to any system "
"architecture, so it may be installed from any system. When conda searches"
" for packages on any system in a channel, conda checks both the system-"
"specific subdirectory, such as ``linux-64``, and the ``noarch`` "
"directory. Noarch is a contraction of \"no architecture\"."
msgstr ""

#: ../../source/glossary.rst:217
msgid "Package manager"
msgstr ""

#: ../../source/glossary.rst:219
msgid ""
"A collection of software tools that automates the process of installing, "
"updating, configuring and removing computer programs for a computer's "
"operating system. Also known as a package management system. Conda is a "
"package manager."
msgstr ""

#: ../../source/glossary.rst:227
msgid "Packages"
msgstr ""

#: ../../source/glossary.rst:229
msgid ""
"Software files and information about the software, such as its name, the "
"specific version and a description, bundled into a file that can be "
"installed and managed by a package manager."
msgstr ""

#: ../../source/glossary.rst:236
msgid "Repository"
msgstr ""

#: ../../source/glossary.rst:238
msgid ""
"Any storage location from which software assets may be retrieved and "
"installed on a local computer. See also :ref:`anaconda-cloud-glossary` "
"and :ref:`conda-repository-glossary`."
msgstr ""

#: ../../source/glossary.rst:246
msgid "Silent mode installation"
msgstr ""

#: ../../source/glossary.rst:248
msgid ""
"When installing Miniconda or Anaconda in silent mode, screen prompts are "
"not shown on screen and default settings are automatically accepted."
msgstr ""

